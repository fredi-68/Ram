# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - test
  - build

#before_script:
  #docker setup
  #- apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
  #- curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
  #- apt-key fingerprint 0EBFCD88
  #- add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  #- apt-get install -y docker-ce docker-ce-cli containerd.io  

  #- python -V               # Print out python version for debugging
  #- pip install virtualenv
  #- virtualenv venv
  #- source venv/bin/activate
  #- pip install -U discord.py[voice]
  #- pip install -U youtube_dl
  #- pip install -U nacl

test:
  stage: test
  script:
  - python -V               # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -U discord.py[voice]
  - pip install -U youtube_dl
  - pip install -U pynacl

  - python -m unittest discover

build:
  image: docker:stable
  stage: build
  script:
  - docker build --tag $CI_IMAGE_TAG .
  - docker image tag $CI_IMAGE_TAG $CI_REGISTRY_ADDR/$CI_IMAGE_TAG
  - docker push $CI_REGISTRY_ADDR/$CI_IMAGE_TAG

#deploy:
#  stage: deploy
#  script:
#  - git push http://ram_deploy:$DEPLOY_PWD@192.168.1.228/fredi_68/protos-discord-bot-production.git HEAD:master